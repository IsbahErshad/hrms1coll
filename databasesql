
CREATE DATABASE HRManagementSystem;
USE HRManagementSystem;

CREATE TABLE DEPARTMENT (
    DID INT PRIMARY KEY,
    DNAME VARCHAR(50),
    DHEAD VARCHAR(50)
);

CREATE TABLE EMPLOYEE (
    EID INT PRIMARY KEY,
    INITIAL VARCHAR(5) CHECK
    (INITIAL IN('DR','MISS',
    'MRS','MR','PROF')),
    FIRSTNAME VARCHAR(50) 
    NOT NULL,
    MIDDLENAME VARCHAR(50),
    LASTNAME VARCHAR(50),
    DESIGNATION VARCHAR(50),
    DOB DATE NOT NULL,
    DATE_OF_JOIN DATE,
    FTYPE VARCHAR(50) CHECK(FTYPE IN ('TEACHING','NON TEACHING')),
    NATIONALITY VARCHAR(50),
    PHONE VARCHAR(10) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL,
    CASTE VARCHAR(50),
    DOORNO VARCHAR(20),
    CITY VARCHAR(50),
    STATE VARCHAR(50),
    PINCODE INT,
    GENDER VARCHAR(6) 
    CHECK(GENDER IN('MALE','FEMALE','OTHER')),
    PROFEXP_DESIGNATION VARCHAR(50),
    PPROFEXP_FROM DATE,
    PPROFEXP_TO DATE,
    LEAVE_ML INT,
    LEAVE_LOP INT,
    LEAVE_RH INT,
    LEAVE_OOD INT,
    LEAVE_CL INT,
    DID INT,
    FOREIGN KEY (DID) REFERENCES DEPARTMENT(DID)
);

CREATE TABLE EMPLOYEEDETAILS (
    EID INT,
    BIOMETRIC_CARD_NO VARCHAR(20),
    AADHAR BIGINT UNIQUE,
    BANK_ACC VARCHAR(14) UNIQUE,
    PAN VARCHAR(20) UNIQUE,
    PRIMARY KEY (EID, AADHAR),
    FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID) ON DELETE CASCADE
);

CREATE TABLE SALARY (
    EID INT,
    BASIC_SAL DECIMAL(10, 2),
    AGP DECIMAL(10, 2),
    ESI DECIMAL(10, 2),
    LOAN DECIMAL(10, 2),
    IT DECIMAL(10, 2),
    FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID)  ON DELETE CASCADE
);

CREATE TABLE PAYROLL (
    EID INT,
    P_DATE DATE,
    NO_OF_DAYS INT,
    PF DECIMAL(10, 2),
    VA DECIMAL(10, 2),
    PRIMARY KEY (EID, P_DATE),
    FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID)  ON DELETE CASCADE
);

CREATE TABLE QUALIFICATION (
    EID INT,
    INSTITUTION VARCHAR(100),
    PERCENTAGE DECIMAL(5, 2),
    SPECIALIZATION VARCHAR(50),
    YOG INT,
    PRIMARY KEY (EID, INSTITUTION, PERCENTAGE, SPECIALIZATION, YOG),
    FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID)  ON DELETE CASCADE
);

CREATE TABLE LEAVES (
    EID INT,
    LTYPE VARCHAR(10) CHECK(LTYPE IN ('ML','LOP','RH','OOD','CL')),
    APPROVAL VARCHAR(20) CHECK(APPROVAL IN('APPROVED','PENDING','REJECTED')),
    NO_OF_DAYS INT,
    FROM_DATE DATE,
    TO_DATE DATE,
    FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID)  ON DELETE CASCADE
);

CREATE TABLE FAMILY (
    EID INT,
    FNAME VARCHAR(50),
    F_DOB DATE,
    MNAME VARCHAR(50),
    M_DOB DATE,
    FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID)  ON DELETE CASCADE
);

CREATE TABLE ATTENDANCE (
    EID INT,
    A_DATE DATE,
    STATUS VARCHAR(10) CHECK(STATUS IN('ABSENT','PRESENT')),
    LOGIN TIME,
    LOGOUT TIME,
    PRIMARY KEY (EID, A_DATE),
    FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID)  ON DELETE CASCADE
);

INSERT INTO DEPARTMENT(DID,DNAME,DHEAD) VALUES(1,'AIML','AA');
ALTER TABLE EMPLOYEE MODIFY COLUMN PINCODE INT NULL;
ALTER TABLE EMPLOYEE MODIFY COLUMN LEAVE_ML INT NULL;
ALTER TABLE EMPLOYEE MODIFY COLUMN LEAVE_LOP INT NULL;
ALTER TABLE EMPLOYEE MODIFY COLUMN LEAVE_RH INT NULL;
ALTER TABLE EMPLOYEE MODIFY COLUMN LEAVE_OOD INT NULL;
ALTER TABLE EMPLOYEE MODIFY COLUMN LEAVE_CL INT NULL;

DELIMITER $$

CREATE TRIGGER UPDT_LB
AFTER INSERT ON LEAVES
FOR EACH ROW
BEGIN
    IF NEW.LTYPE = 'ML' THEN
        UPDATE EMPLOYEE
        SET LEAVE_ML = LEAVE_ML - NEW.NO_OF_DAYS
        WHERE EID = NEW.EID;
    ELSEIF NEW.LTYPE = 'LOP' THEN
        UPDATE EMPLOYEE
        SET LEAVE_LOP = LEAVE_LOP - NEW.NO_OF_DAYS
        WHERE EID = NEW.EID;
    ELSEIF NEW.LTYPE = 'RH' THEN
        UPDATE EMPLOYEE
        SET LEAVE_RH = LEAVE_RH - NEW.NO_OF_DAYS
        WHERE EID = NEW.EID;
    ELSEIF NEW.LTYPE = 'OOD' THEN
        UPDATE EMPLOYEE
        SET LEAVE_OOD = LEAVE_OOD - NEW.NO_OF_DAYS
        WHERE EID = NEW.EID;
    ELSEIF NEW.LTYPE = 'CL' THEN
        UPDATE EMPLOYEE
        SET LEAVE_CL = LEAVE_CL - NEW.NO_OF_DAYS
        WHERE EID = NEW.EID;
    END IF;
END $$

DELIMITER ;

SELECT * FROM EMPLOYEE;

DELIMITER $$

CREATE PROCEDURE GetLeavesByDate(
    IN p_leave_date DATE
)
BEGIN
    SELECT 
        L.EID,
        L.LTYPE,
        L.APPROVAL,
        L.NO_OF_DAYS,
        L.FROM_DATE,
        L.TO_DATE,
        E.FIRSTNAME,
        E.LASTNAME,
        E.DESIGNATION
    FROM LEAVES L
    JOIN EMPLOYEE E ON L.EID = E.EID
    WHERE p_leave_date BETWEEN L.FROM_DATE AND L.TO_DATE;
END $$

DELIMITER ;

CALL GetLeavesByDate('2024-12-20');

DELIMITER $$
CREATE PROCEDURE FilterPayrollByEID(
    IN p_EID INT
)
BEGIN
    SELECT * FROM PAYROLL WHERE EID = p_EID;
END $$
DELIMITER ;

CALL FilterPayrollByEID(3);


SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE 
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
WHERE TABLE_NAME = 'EMPLOYEE';
ALTER TABLE FAMILY ADD CONSTRAINT PRIMARY KEY(EID);

SELECT * FROM DEPARTMENT;

ALTER TABLE SALARY ADD COLUMN SAL_DATE DATE NULL;
ALTER TABLE SALARY MODIFY COLUMN SAL_DATE DATE NOT NULL;
ALTER TABLE SALARY ADD CONSTRAINT PRIMARY KEY(EID);
